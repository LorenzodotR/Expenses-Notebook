generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id @default(uuid())
  email     String  @unique
  birthDate String
  name      String
  sureName  String
  password  String
  street    String
  city      String
  state     String
  zipCode   String
  country   String
  avatarUrl String?

  Banks        Bank[]
  Cards        Card[]
  Transactions Transactions[]
}

model Bank {
  id      String  @id @default(uuid())
  ispb    Int
  balance Decimal @db.Decimal(10, 2)
  agency  Int
  userId  String

  user         User           @relation(fields: [userId], references: [id])
  Cards        Card[]
  Transactions Transactions[]
}

model Card {
  id             String    @id @default(uuid())
  cardName       String
  cardLimit      Decimal?  @db.Decimal(10, 2)
  expirationDate DateTime?
  cardType       CardType
  bankId         String
  userId         String

  Bank         Bank           @relation(fields: [bankId], references: [id])
  User         User           @relation(fields: [userId], references: [id])
  Transactions Transactions[]
}

model Transactions {
  id          String   @id @default(uuid())
  value       Decimal  @db.Decimal(10, 2)
  description String
  expendDate  DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  transactionType TransactionType
  categoryType    CategoryType?

  userId String
  user   User   @relation(fields: [userId], references: [id])

  cardId String?
  Card   Card?   @relation(fields: [cardId], references: [id])

  bankId String?
  Bank   Bank?   @relation(fields: [bankId], references: [id])
}

enum TransactionType {
  Incoming
  Expense
}

enum CategoryType {
  Food
  Transport
  Card
  Bills
  Entretainment
  Trips
}

enum CardType {
  Credito
  Debito
}
