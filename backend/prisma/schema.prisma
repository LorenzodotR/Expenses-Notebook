generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String         @id @default(uuid())
  email     String         @unique
  birthDate String
  name      String
  sureName  String
  password  String
  address   Address[]
  bankId    String?
  avatarUrl String?
  Cards     Card[]
  Expenses  Transactions[]
  Banks     Bank?          @relation(fields: [bankId], references: [id])
}

model Address {
  id      String @id @default(uuid())
  userId  String
  street  String
  city    String
  state   String
  zipCode String
  country String
  user    User   @relation(fields: [userId], references: [id])
}

model Card {
  id       String         @id @default(uuid())
  Transactions Transactions[]
  userId   String?
  User     User?          @relation(fields: [userId], references: [id])
  Bank     Bank?          @relation(fields: [bankId], references: [id])
  bankId   String?
}

model Bank {
  id           String         @id @default(uuid())
  ispb         Int
  balance      Decimal
  agency       Int
  User         User[]
  Cards        Card[]
  Transactions Transactions[]
}

model Transactions {
  id              String          @id @default(uuid())
  value           Decimal
  description     String
  expendDate      DateTime
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  userId          String
  categoryType    CategoryType?
  transactionType TransactionType
  user            User            @relation(fields: [userId], references: [id])
  card            Card?           @relation(fields: [cardId], references: [id])
  cardId          String?
  Bank            Bank?           @relation(fields: [bankId], references: [id])
  bankId          String?
}

enum TransactionType {
  Incoming
  Expense
}

enum CategoryType {
  Food
  Transport
  Card
  Bills
  Entretainment
  Trips
}
